/*
 * Copyright (c) 2018 Sean Porter <glitchkey@gmail.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.glitchkey.glitteringdepths.structures.ruins;

//* IMPORTS: JDK/JRE
	import java.util.ArrayList;
	import java.util.Arrays;
	import java.util.List;
	import java.util.Random;
//* IMPORTS: BUKKIT
	import org.bukkit.block.Block;
	import org.bukkit.block.BlockFace;
	import org.bukkit.Location;
	import org.bukkit.World;
//* IMPORTS: GLITTERING DEPTHS
	//* NOT NEEDED
//* IMPORTS: OTHER
	//* NOT NEEDED

public class Ruin1 extends RuinGenerator
{
	public Ruin1(boolean notifyOnBlockChanges) {
		super(notifyOnBlockChanges);
	}

	protected void fillNorth() {
		Integer[] temp1 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 1, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 4, 2, 1, 2, 4, 3, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 1, 2, 1, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 2, 1, 2, 1, 2, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 4, 1, 2, 1, 2, 1, 4, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 2, 1, 2, 1, 2, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 1, 2, 4, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 4, 2, 1, 3, 0, 3, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		floorN = Arrays.asList(temp1);

		Integer[] temp2 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 4, 3, 5, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 3, 0, 0, 0, 4, 3, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 6, 0, 0, 0, 3, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 6, 0, 0, 3, 4, 3, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 4, 0, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8, 8, 7, 0, 7, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 0, 8, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 7, 0, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0, 0,  7, 0, 0, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8, 8,  7, 0, 7, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8, 0,  0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0,  0, 0, 8, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 7, 8, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0,  0, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 7, 0, 7, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0,  0, 7, 0, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 10, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0, 0,  0, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0,  0, 7, 0,  0,  7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8,  8, 3, 10, 3,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 8,  0, 0, 0,  8,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 3,  0, 0, 0,  8,  7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 11, 0, 0, 0,  3,  8, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 11, 0, 0, 0,  0,  0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 3,  0, 0, 0,  0,  0, 3, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 11, 0, 0, 0,  0,  0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 11, 0, 0, 3,  10, 3, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 3,  0, 0, 7,  0,  7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 7,  0, 7, 0,  0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0,  0, 0, 7,  0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0
		};

		wallN = Arrays.asList(temp2);
	}

	protected void fillSouth() {
		Integer[] temp1 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 3, 0, 3, 1, 2, 4, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 4, 2, 1, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 2, 1, 2, 1, 2, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 4, 1, 2, 1, 2, 1, 4, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 2, 1, 2, 1, 2, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 1, 2, 1, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 3, 4, 2, 1, 2, 4, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 1, 2, 1, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		floorS = Arrays.asList(temp1);

		Integer[] temp2 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7,  0, 0, 0,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,  3, 0, 3,  0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 7,  0, 0, 4,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 3, 4, 3,  0, 0, 13, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 0, 0, 0,  0, 0, 13, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 3, 0, 0, 0,  0, 0, 3,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 0, 0, 0,  0, 0, 13, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 3, 0,  0, 0, 13, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 4, 0,  0, 0, 3,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 0,  0, 0, 4,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 12, 3, 4, 4,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0, 0,  7, 0, 0,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 7, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 7, 0, 7, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 8, 0, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 8, 8, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0,  0, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 10, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 7, 0, 0,  7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 7, 0, 7, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0,  7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 7, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 8, 0, 0, 0,  7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0,  8, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 8,  8, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0,  0, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  7,  0, 0, 0,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0,  7, 0, 7,  0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0,  7,  0, 0, 3,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 3, 10, 3,  0, 0, 11, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0,  0,  0, 0, 11, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 3, 0, 0,  0,  0, 0, 3,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0,  0,  0, 0, 11, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 3,  0,  0, 0, 11, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 8,  0,  0, 0, 3,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 8,  0,  0, 0, 8,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 3,  10, 3, 8, 8,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0,  0,  7, 0, 0,  7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0,  0, 0, 0, 0,
		};

		wallS = Arrays.asList(temp2);
	}

	protected void fillEast() {
		Integer[] temp1 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 4, 1, 2, 1, 4, 3, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 2, 1, 2, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 2, 1, 2, 1, 2, 1, 4, 3, 0, 3, 0, 0,
			0, 0, 3, 4, 1, 2, 1, 2, 1, 2, 1, 2, 4, 0, 0, 0,
			0, 0, 0, 4, 2, 1, 2, 1, 2, 1, 2, 1, 4, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		floorE = Arrays.asList(temp1);

		Integer[] temp2 = {
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 7, 0,  0,  7, 0,  0,  7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 4,  4,  3, 4,  4,  0, 0, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 4,  0,  0, 0,  3,  7, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 3,  0,  0, 0,  4,  0, 0, 0, 0, 0,
			0, 0, 0, 6, 0, 0, 0,  0,  0, 0,  3,  7, 0, 7, 0, 0,
			0, 0, 7, 3, 0, 0, 0,  0,  0, 0,  0,  0, 3, 0, 0, 0,
			0, 0, 0, 4, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 3, 12, 12, 3, 12, 12, 4, 3, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 0,  0,  7, 0,  0,  7, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 8, 8, 7, 8, 8, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 8, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 7, 8, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 7, 0, 0,
			0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0,
			0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 8, 8, 7, 0, 0, 7, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 8, 8, 7, 8, 8, 0, 0,  0, 0, 0,
			0, 0, 7, 0, 0, 7, 8, 0, 0, 0, 7, 7, 0,  0, 0, 0,
			0, 0, 0, 7, 8, 8, 7, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0,  7, 0, 0,
			0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 3,  0, 0, 0,
			0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0,
			0, 0, 0, 8, 8, 7, 0, 0, 7, 0, 0, 7, 3,  0, 0, 0,
			0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,

			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 7, 0,  0,  7, 0,  0,  7, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 8,  8,  3, 8,  8,  0, 0, 0, 0, 0,
			0, 0, 7, 0,  0, 7, 8,  0,  0, 0,  3,  7, 0, 0, 0, 0,
			0, 0, 0, 3,  8, 8, 3,  0,  0, 0,  11, 0, 0, 0, 0, 0,
			0, 0, 0, 11, 0, 0, 0,  0,  0, 0,  3,  7, 0, 7, 0, 0,
			0, 0, 7, 3,  0, 0, 0,  0,  0, 0,  0,  0, 7, 0, 0, 0,
			0, 0, 0, 8,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 8,  8, 3, 10, 10, 3, 10, 10, 3, 7, 0, 0, 0,
			0, 0, 7, 0,  0, 7, 0,  0,  7, 0,  0,  7, 0, 7, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0,
		};

		wallE = Arrays.asList(temp2);
	}

	protected void fillWest() {
		Integer[] temp1 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 4, 1, 2, 1, 2, 1, 2, 1, 2, 4, 0, 0, 0,
			0, 0, 0, 4, 2, 1, 2, 1, 2, 1, 2, 1, 4, 3, 0, 0,
			0, 0, 3, 0, 3, 4, 1, 2, 1, 2, 1, 2, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 2, 1, 2, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 3, 4, 1, 2, 1, 4, 3, 0, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		floorW = Arrays.asList(temp1);

		Integer[] temp2 = {
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 7, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,  7, 0, 0,
			0, 0, 0, 3, 4, 5, 5, 3, 5, 5, 3, 4, 4,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,  0, 0, 0,
			0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3,  7, 0, 0,
			0, 0, 7, 0, 7, 3, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 0, 0, 0, 3, 4, 4, 4,  0, 0, 0,
			0, 0, 0, 0, 7, 3, 0, 0, 0, 4, 7, 0, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 3, 4, 4, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 7, 0, 0, 7, 8, 8, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0,
			0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0,
			0, 0, 7, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 8, 7, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 8, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 7, 8, 8, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0,  7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 3,  7, 0, 0, 7, 0, 0, 7, 8, 8, 0, 0, 0,
			0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0,
			0, 0, 0, 3,  0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0,
			0, 0, 7, 0,  7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 7, 8, 8, 7, 0, 0, 0,
			0, 0, 0, 0,  7, 7, 0, 0, 0, 8, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 0,  0, 8, 8, 7, 8, 8, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 7, 0, 7, 0,  0,  7, 0,  0,  7, 0, 0,  7, 0, 0,
			0, 0, 0, 7, 3, 10, 10, 3, 10, 10, 3, 8, 8,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 8,  0, 0, 0,
			0, 0, 0, 7, 0, 0,  0,  0, 0,  0,  0, 0, 3,  7, 0, 0,
			0, 0, 7, 0, 7, 3,  0,  0, 0,  0,  0, 0, 11, 0, 0, 0,
			0, 0, 0, 0, 0, 11, 0,  0, 0,  3,  8, 8, 3,  0, 0, 0,
			0, 0, 0, 0, 7, 3,  0,  0, 0,  8,  7, 0, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 8,  8,  3, 8,  8,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 7, 0,  0,  7, 0,  0,  7, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0, 0,  0, 0, 0,
		};

		wallW = Arrays.asList(temp2);
	}
}
