/*
 * Copyright (c) 2018 Sean Porter <glitchkey@gmail.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.glitchkey.glitteringdepths.structures.ruins;

//* IMPORTS: JDK/JRE
	import java.util.ArrayList;
	import java.util.Arrays;
	import java.util.List;
	import java.util.Random;
//* IMPORTS: BUKKIT
	import org.bukkit.block.Block;
	import org.bukkit.block.BlockFace;
	import org.bukkit.Location;
	import org.bukkit.World;
//* IMPORTS: GLITTERING DEPTHS
	//* NOT NEEDED
//* IMPORTS: OTHER
	//* NOT NEEDED

public class Ruin3 extends RuinGenerator
{
	/**
	 * Fills in the template data for a north-facing ruin
	 **/
	protected void fillNorth()
	{
		// Create an array for the floor tiles
		Integer[] temp1 =
		{
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 4, 8, 9, 8, 4, 3, 0, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 4, 9, 8, 9, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 8, 9, 8, 9, 8, 9, 4, 0, 0, 0,
			0, 0, 0, 0, 3, 4, 9, 8, 9, 8, 9, 8, 4, 3, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 8, 9, 4, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 3, 0, 3, 4, 9, 8, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 9, 4, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 9, 8, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		// Create an array for the wall tiles
		Integer[] temp2 =
		{
			// One block above the floor
			0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 3, 0, 0, 3,  0, 0, 3, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 3,  4, 4, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 3, 3, 0, 0,  0, 4, 3, 0, 0,  3, 0, 0,
			0, 0, 0, 0, 0, 6, 0, 0,  0, 3, 4, 4, 4,  0, 0, 0,
			0, 0, 0, 0, 0, 6, 0, 0,  0, 0, 0, 0, 4,  0, 0, 0,
			0, 0, 0, 0, 3, 3, 0, 0,  0, 0, 0, 0, 3,  3, 0, 0,
			0, 0, 0, 0, 0, 4, 3, 12, 3, 3, 0, 0, 13, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 3, 0,  3, 4, 0, 0, 13, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0, 4, 0, 0, 3,  3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  3, 4, 0, 0, 4,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0, 3, 0, 0, 3,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  3, 0, 0, 0, 0,  3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0,  0, 0, 0,

			// Two blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 7, 0, 7, 0, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 4, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 8, 8, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0,
			0, 0, 0, 0, 0, 7, 7, 0, 7, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 7, 8, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 7, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 0, 0, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Three blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 7, 0, 7, 0, 7, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 4, 7,  0,  0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8,  8,  8, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  8, 0, 0, 0,
			0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0,  0,  7, 7, 0, 0,
			0, 0, 0, 0, 0, 7, 7, 0, 7, 7, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 7, 0, 7, 8, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0,  0,  7, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 0,  0,  4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 10, 10, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0,  0,  0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0,

			// Four blocks above the floor
			0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 7, 0,  0,  7,  0,  0, 7, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 3,  10, 3,  10, 3, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 7, 3,  0,  0,  0,  4, 7, 0, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 11, 0,  0,  0,  3, 8, 8, 8,  0, 0, 0,
			0, 0, 0, 0, 0, 11, 0,  0,  0,  0, 0, 0, 8,  0, 0, 0,
			0, 0, 0, 0, 7, 3,  0,  0,  0,  0, 0, 0, 3,  7, 0, 0,
			0, 0, 0, 0, 0, 3,  3,  10, 3,  3, 0, 0, 11, 0, 0, 0,
			0, 0, 0, 0, 7, 0,  7,  0,  7,  8, 0, 0, 11, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  0,  8, 0, 0, 3,  7, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  7,  8, 0, 0, 4,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  0,  7, 0, 0, 7,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  7,  0, 0, 0, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0, 0
		};

		// Convert the arrays to lists and add them to the template data
		floorN = Arrays.asList(temp1);
		wallN = Arrays.asList(temp2);
	}

	/**
	 * Fills in the template data for a south-facing ruin
	 **/
	protected void fillSouth()
	{
		// Create an array for the floor tiles
		Integer[] temp1 =
		{
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 8, 9, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 4, 9, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 8, 9, 4, 3, 0, 3, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 4, 9, 8, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 3, 4, 8, 9, 8, 9, 8, 9, 4, 3, 0, 0, 0, 0,
			0, 0, 0, 4, 9, 8, 9, 8, 9, 8, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 9, 8, 9, 4, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 4, 8, 9, 8, 4, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		// Create an array for the wall tiles
		Integer[] temp2 =
		{
			// One block above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 4, 0, 0, 4, 3, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 3, 3, 0, 0, 4, 0, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 6, 0, 0, 4, 3, 0, 3, 0, 3,  0, 0, 0, 0,
			0, 0, 0, 6, 0, 0, 3, 3, 5, 3, 4, 0,  0, 0, 0, 0,
			0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3,  0, 0, 0, 0,
			0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 3, 0, 0, 0, 0, 13, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 4, 0, 0, 0, 3, 3,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 4, 4, 3, 4, 4, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0,

			// Two blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 0, 0, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 7, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 8, 7, 0, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 7, 0, 7, 7, 0, 0, 0, 0, 0,
			0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 8, 8, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 4, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 7, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Three blocks above the floor
			0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0,  0,  0, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 10, 10, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 0,  0,  8, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 7, 0,  0,  8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  8, 7, 0, 7, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  7, 7, 0, 7, 7, 0, 0, 0, 0, 0,
			0, 0, 7, 7, 0,  0,  0, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 8, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 8, 8,  8,  7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0,  7,  4, 0, 0, 0, 7, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  7, 0, 7, 0, 7, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  7,  0, 0, 7, 0, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Four blocks above the floor
			0, 0, 0, 0,  0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 7, 0,  0, 0, 0, 7,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 7,  0, 0, 7, 0,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 4,  0, 0, 8, 7,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 7, 3,  0, 0, 8, 0,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 11, 0, 0, 8, 7,  0,  7,  0,  7, 0, 0, 0, 0,
			0, 0, 0, 11, 0, 0, 3, 3,  10, 3,  3,  0, 0, 0, 0, 0,
			0, 0, 7, 3,  0, 0, 0, 0,  0,  0,  3,  7, 0, 0, 0, 0,
			0, 0, 0, 8,  0, 0, 0, 0,  0,  0,  11, 0, 0, 0, 0, 0,
			0, 0, 0, 8,  8, 8, 3, 0,  0,  0,  11, 0, 0, 0, 0, 0,
			0, 0, 7, 0,  0, 7, 4, 0,  0,  0,  3,  7, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 3, 10, 3,  10, 3,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 7, 0, 0,  7,  0,  0,  7, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0,  0,  0,  0,  0, 0, 0, 0, 0
		};

		// Convert the arrays to lists and add them to the template data
		floorS = Arrays.asList(temp1);
		wallS = Arrays.asList(temp2);
	}

	/**
	 * Fills in the template data for an east-facing ruin
	 **/
	protected void fillEast()
	{
		// Create an array for the floor tiles
		Integer[] temp1 =
		{
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 4, 9, 8, 9, 8, 9, 8, 4, 0, 0, 0,
			0, 0, 3, 0, 3, 4, 8, 9, 8, 9, 8, 9, 4, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 9, 8, 4, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 4, 8, 9, 8, 9, 4, 3, 0, 3, 0, 3, 0, 0,
			0, 0, 3, 4, 9, 8, 9, 8, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 8, 9, 8, 9, 4, 3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 3, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		// Create an array for the wall tiles
		Integer[] temp2 =
		{
			// One block above the floor
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 3, 0,  0,  3, 0,  0, 3, 0, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 4,  4,  3, 5,  5, 3, 4, 3, 0, 0, 0,
			0, 0, 0, 0, 0, 4,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 3, 4,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 3,  0,  0, 3,  4, 4, 4, 3, 0, 0, 0,
			0, 0, 0, 4, 0, 0,  0,  0, 3,  3, 0, 3, 0, 3, 0, 0,
			0, 0, 3, 3, 0, 0,  0,  0, 13, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 0, 0,  0,  0, 3,  3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 3, 12, 12, 3, 4,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 3, 0,  0,  3, 0,  3, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0,  0,  0, 0,  0, 0, 0, 0, 0, 0, 0,

			// Two blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 7, 0, 0, 7, 4, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 4, 7, 0, 0, 7, 8, 8, 8, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 7, 0, 7, 0, 0,
			0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 7, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Three blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 8, 8, 7, 0, 0, 7, 4, 3,  0, 0, 0,
			0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0,
			0, 0, 7, 0, 7, 8, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0,
			0, 0, 0, 7, 4, 7, 0, 0, 7, 8, 8, 8, 3,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 7, 0,  7, 0, 0,
			0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 7, 7, 0, 0, 7, 7, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 7, 0, 7, 0, 0, 7, 0, 7, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,

			// Four blocks above the floor
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  7, 0,  0,  7, 0,  0,  7, 0, 0, 7, 0, 0,
			0, 0, 0, 0,  0, 8,  8,  3, 10, 10, 3, 4, 7, 0, 0, 0,
			0, 0, 0, 0,  0, 8,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 7, 0,  7, 8,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 3,  4, 3,  0,  0, 3,  8,  8, 8, 7, 0, 0, 0,
			0, 0, 0, 11, 0, 0,  0,  0, 3,  7,  0, 7, 0, 7, 0, 0,
			0, 0, 7, 3,  0, 0,  0,  0, 11, 0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 11, 0, 0,  0,  0, 3,  7,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 3,  3, 10, 10, 3, 3,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 7, 0,  7, 0,  0,  7, 0,  7,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0,  0,  0, 0,  0,  0, 0, 0, 0, 0, 0
		};

		// Convert the arrays to lists and add them to the template data
		floorE = Arrays.asList(temp1);
		wallE = Arrays.asList(temp2);
	}

	/**
	 * Fills in the template data for a west-facing ruin
	 **/
	protected void fillWest()
	{
		// Create an array for the floor tiles
		Integer[] temp1 =
		{
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 3, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 3, 4, 9, 8, 9, 8, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 4, 8, 9, 8, 9, 4, 3, 0, 0,
			0, 0, 3, 0, 3, 0, 3, 4, 9, 8, 9, 8, 4, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 4, 8, 9, 4, 4, 4, 0, 0, 0,
			0, 0, 0, 4, 9, 8, 9, 8, 9, 8, 4, 3, 0, 3, 0, 0,
			0, 0, 0, 4, 8, 9, 8, 9, 8, 9, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		// Create an array for the wall tiles
		Integer[] temp2 =
		{
			// One block above the floor
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 3,  0,  3, 0, 0, 3, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  4,  3, 5, 5, 3, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 3,  3,  0, 0, 0, 0, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  6,  0, 0, 0, 0, 3, 3, 0, 0,
			0, 0, 3, 0, 3, 0, 3,  3,  0, 0, 0, 0, 4, 0, 0, 0,
			0, 0, 0, 3, 4, 4, 4,  3,  0, 0, 3, 4, 4, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 4, 3, 0, 3, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 4, 0, 0, 0, 0, 0,
			0, 0, 0, 3, 4, 3, 12, 12, 3, 4, 4, 0, 0, 0, 0, 0,
			0, 0, 3, 0, 0, 3, 0,  0,  3, 0, 0, 3, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0, 0, 0, 0, 0, 0, 0,

			// Two blocks above the floor
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 7, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0,
			0, 0, 7, 0, 7, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 8, 8, 8, 7, 0, 0, 7, 4, 7, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 7, 0, 7, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 7, 4, 7, 0, 0, 7, 8, 8, 0, 0, 0, 0, 0,
			0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Three blocks above the floor
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 7, 0, 7, 0, 0, 7, 0, 7, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 7, 7, 0, 0, 7, 7, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0,
			0, 0, 7, 0,  7, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 3,  8, 8, 8, 7, 0, 0, 7, 4, 7, 0, 0, 0,
			0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 8, 7, 0, 7, 0, 0,
			0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0,
			0, 0, 0, 3,  4, 7, 0, 0, 7, 8, 8, 0, 0, 0, 0, 0,
			0, 0, 7, 0,  0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			// Four blocks above the floor
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 7,  0,  7, 0,  0,  7, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  3,  3, 10, 10, 3, 3,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 7,  3,  0, 0,  0,  0, 11, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  11, 0, 0,  0,  0, 3,  7, 0, 0,
			0, 0, 7, 0, 7, 0, 7,  3,  0, 0,  0,  0, 11, 0, 0, 0,
			0, 0, 0, 7, 8, 8, 8,  3,  0, 0,  3,  4, 3,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  8,  7, 0,  7, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  8,  0, 0,  0, 0, 0,
			0, 0, 0, 7, 4, 3, 10, 10, 3, 8,  8,  0, 0,  0, 0, 0,
			0, 0, 7, 0, 0, 7, 0,  0,  7, 0,  0,  7, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,  0,  0, 0,  0,  0, 0,  0, 0, 0
		};

		// Convert the arrays to lists and add them to the template data
		floorW = Arrays.asList(temp1);
		wallW = Arrays.asList(temp2);
	}
}
